Write a function, sublist, that takes in a list of numbers as the parameter. In the function, use a while loop to return a sublist of the input list. The sublist should contain the same values of the original list up until it reaches the number 5 (it should not contain the number 5).
def sublist(x):
    new_list =[]
    i = 0
    while i < len(x):
        if x[i] == 5:
            break
        else:
            new_list.append(x[i])
            i = i +1
    return new_list
sublist([1,2,3,4,5])


Write a function called check_nums that takes a list as its parameter, and contains a while loop that only stops once the element of the list is the number 7. What is returned is a list of all of the numbers up until it reaches 7.
def check_nums(x):
    new_list = []
    i = 0
    while i < len(x):
        if x[i] == 7:
            break
        else:
            new_list.append(x[i])
            i = i+1
    return new_list
check_nums([0,1,2,3,4,5,6,7])
#Challenge: Write a function called beginning that takes a list as input and contains a while loop that only stops once the element of the list is the string ‘bye’. What is returned is a list that contains up to the first 10 strings, regardless of where the loop stops. (i.e., if it stops on the 32nd element, the first 10 are returned. If “bye” is the 5th element, the first 4 are returned.) If you want to make this even more of a challenge, do this without slicing
def beginning(x):
    i = 0
    new_list= []
    while i < len(x):
        if x[i] == 'bye':
            return x[0:10]
            i=i+1
        else:
            new_list.append(x[i])
    return new_list
